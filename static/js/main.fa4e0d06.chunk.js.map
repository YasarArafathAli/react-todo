{"version":3,"sources":["components/Item.jsx","components/App.jsx","index.js"],"names":["Item","props","useState","taskDone","setTaskDone","onClick","prev","style","textDecoration","value","App","inputValue","setInput","todoItems","setItems","className","type","onChange","e","target","prevValue","map","item","ReactDOM","render","document","getElementById"],"mappings":"oJAceA,MAZf,SAAcC,GAAQ,IAAD,EACWC,oBAAS,GADpB,mBACdC,EADc,KACJC,EADI,KAGnB,OACE,qBAAKC,QAAS,kBAAMD,GAAY,SAACE,GAAD,OAAWA,MAA3C,SACE,oBAAIC,MAAO,CAAEC,eAAgBL,EAAW,eAAiB,QAAzD,SACGF,EAAMQ,WCiCAC,MAvCf,WAAgB,IAAD,EACgBR,mBAAS,IADzB,mBACRS,EADQ,KACIC,EADJ,OAEeV,mBAAS,CAAC,aAAc,gBAFvC,mBAERW,EAFQ,KAEGC,EAFH,KAIb,OACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,sBAAKA,UAAU,OAAf,UACE,uBACEC,KAAK,OACLC,SAAU,SAACC,GACTN,EAASM,EAAEC,OAAOV,QAEpBA,MAAOE,IAET,wBACEN,QAAS,WACPS,GAAS,SAACM,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBT,OAExBC,EAAS,KALb,oBAWF,8BACE,6BACGC,EAAUQ,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAMb,MAAOa,eC7BzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fa4e0d06.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Item(props) {\r\n  var [taskDone, setTaskDone] = useState(false);\r\n\r\n  return (\r\n    <div onClick={() => setTaskDone((prev) => !prev)}>\r\n      <li style={{ textDecoration: taskDone ? \"line-through\" : \"none\" }}>\r\n        {props.value}\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState } from \"react\";\nimport Item from \"./Item\";\nfunction App() {\n  var [inputValue, setInput] = useState(\"\");\n  var [todoItems, setItems] = useState([\"first task\", \"second task\"]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input\n          type=\"text\"\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n          value={inputValue}\n        />\n        <button\n          onClick={() => {\n            setItems((prevValue) => {\n              return [...prevValue, inputValue];\n            });\n            setInput(\"\");\n          }}\n        >\n          Add\n        </button>\n      </div>\n      <div>\n        <ul>\n          {todoItems.map((item) => (\n            <Item value={item} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}